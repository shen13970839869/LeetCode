package Com.Szy.Base;

import java.math.BigInteger;

public class Test01 {
	public static void main(String[] args) {
		int[][] i = {{0,6,7},{0,1,2},{1,2,3},{1,3,3},{6,3,3},{3,5,1},{6,5,1},{2,5,1},{0,4,5},{4,6,2}};
		int[][] j = {{1,0,3233},{1,2,5575},{2,0,8808},{3,1,3576},{0,3,6809},{4,2,8393},{0,4,17201},{5,2,9453},{5,0,18261},{5,4,1060},{5,3,11452},{6,3,20051},{6,2,18052},{5,6,8599},{6,0,26860},{4,6,9659},{1,6,23627},{3,7,3440},{8,4,10812},{2,8,19205},{5,8,9752},{1,8,24780},{8,7,17764},{6,8,1153},{8,3,21204},{8,0,28013},{9,6,5862},{7,9,22473},{9,2,23914},{9,4,15521},{9,8,4709},{1,9,29489},{5,9,14461},{0,9,32722},{9,3,25913},{10,3,4235},{10,2,2236},{0,10,11044},{11,10,23371},{1,11,31182},{11,3,27606},{6,11,7555},{11,9,1693},{2,11,25607},{8,11,6402},{11,0,34415},{11,4,17214},{7,11,24166},{5,11,16154},{6,12,15767},{12,9,9905},{4,12,25426},{0,12,42627},{12,5,24366},{12,3,35818},{12,8,14614},{12,10,31583},{12,11,8212},{7,12,32378},{12,1,39394},{2,12,33819},{2,13,40532},{8,13,21327},{13,1,46107},{13,12,6713},{3,13,42531},{11,13,14925},{14,8,3362},{1,14,28142},{15,14,6053},{8,16,28951},{16,10,45920},{14,16,25589},{5,16,38703},{16,2,48156},{13,16,7624},{16,15,19536},{16,6,30104},{16,1,53731},{16,3,50155},{9,16,24242},{16,4,39763},{12,16,14337},{14,17,19219},{0,17,50594},{7,17,40345},{17,12,7967},{17,5,32333},{17,9,17872},{1,17,47361},{13,17,1254},{18,17,6103},{18,1,53464},{18,12,14070},{18,8,28684},{11,18,22282},{18,6,29837},{18,7,46448},{10,18,45653},{4,18,39496},{18,9,23975},{3,18,49888},{18,15,19269},{19,16,1549},{19,12,15886},{19,13,9173},{7,19,48264},{19,2,49705},{19,11,24098},{3,19,51704},{4,19,41312},{19,1,55280},{9,19,25791},{15,19,21085},{19,0,58513},{17,19,7919},{9,20,25990},{12,20,16085},{15,20,21284},{0,20,58712},{1,20,55479},{11,20,24297},{4,20,41511},{20,14,27337},{20,2,49904},{20,10,47668},{20,17,8118},{20,3,51903},{16,20,1748},{8,20,30699},{20,13,9372},{5,20,40451},{19,20,199},{20,18,2015},{21,9,10192},{21,5,24653},{3,21,36105},{21,12,287},{4,21,25713},{22,19,801},{21,22,16400},{13,22,9974},{22,1,56081},{22,0,59314},{3,22,52505},{22,20,602},{22,14,27939},{9,22,26592},{4,22,42113},{22,10,48270},{22,7,49065},{22,15,21886},{22,2,50506},{18,22,2617},{11,22,24899},{22,12,16687},{22,17,8720},{22,6,32454},{16,22,2350},{22,23,2765},{11,23,27664},{23,17,11485},{23,20,3367},{3,23,55270},{23,1,58846},{12,23,19452},{23,13,12739},{23,4,44878},{0,23,62079},{6,23,35219},{19,23,3566},{23,8,34066},{23,18,5382},{5,23,43818},{23,9,29357},{10,23,51035},{2,23,53271},{23,21,19165},{23,15,24651},{23,14,30704},{7,23,51830},{24,22,12265},{10,24,60535},{24,4,54378},{24,5,53318},{3,24,64770},{0,24,71579},{24,11,37164},{6,24,44719},{14,24,40204},{1,24,68346},{20,24,12867},{7,24,61330},{24,19,13066},{24,23,9500},{13,24,22239},{17,24,20985},{24,9,38857},{11,25,28058},{14,25,31098},{9,25,29751},{25,12,19846},{4,25,45272},{25,23,394},{25,5,44212},{8,25,34460},{25,2,53665},{25,17,11879},{25,16,5509},{10,25,51429},{15,26,37981},{26,21,32495},{26,23,13330},{24,26,3830},{4,26,58208},{0,26,75409},{10,26,64365},{26,3,68600},{26,11,40994},{26,2,66601},{6,26,48549},{13,26,26069},{0,27,82747},{7,27,72498},{27,2,73939},{27,26,7338},{27,15,45319},{27,23,20668},{21,27,39833},{3,27,75938},{27,16,25783},{9,27,50025},{27,1,79514},{27,20,24035},{10,27,71703},{27,6,55887},{5,27,64486},{25,27,20274},{18,27,26050},{27,8,54734},{27,4,65546},{27,12,40120},{24,28,7405},{28,12,36357},{28,0,78984},{28,10,67940},{14,28,47609},{7,28,68735},{8,29,54915},{29,26,7519},{15,29,45500},{29,4,65727},{2,29,74120},{29,5,64667},{1,29,79695},{25,29,20455},{0,29,82928},{21,29,40014},{3,29,76119},{29,23,20849},{12,29,40301},{28,29,3944},{29,17,32334},{19,29,24415},{14,29,51553},{22,29,23614},{29,10,71884},{29,11,48513},{29,24,11349},{29,7,72679},{29,27,181},{29,6,56068},{29,20,24216},{29,16,25964},{30,8,58234},{30,22,26933},{27,30,3500},{4,30,69046},{30,9,53525},{30,3,79438},{30,10,75203},{30,29,3319},{28,30,7263},{14,30,54872},{30,20,27535},{30,25,23774},{30,2,77439},{30,23,24168},{30,5,67986},{21,30,43333},{30,16,29283},{0,30,86247},{15,30,48819},{30,19,27734},{30,13,36907},{7,30,75998},{30,12,43620},{1,30,83014},{30,24,14668},{18,30,29550},{9,31,59524},{31,20,33534},{31,10,81202},{31,25,29773},{1,31,89013},{31,24,20667},{30,31,5999},{18,31,35549},{31,13,42906},{2,31,83438},{31,29,9318},{31,26,16837},{22,31,32932},{4,31,75045},{31,7,81997},{14,31,60871},{31,8,64233},{11,31,57831},{31,23,30167},{31,27,9499},{29,32,11204},{15,32,56704},{25,32,31659},{32,4,76931},{17,32,43538},{13,32,44792},{32,12,51505},{32,27,11385},{21,32,51218},{32,22,34818},{32,30,7885},{33,6,58334},{33,0,85194},{22,33,25880},{33,7,74945},{33,9,52472},{33,24,13615},{33,26,9785},{33,19,26681},{33,8,57181},{34,13,46224},{34,15,58136},{34,1,92331},{8,34,67551},{34,17,44970},{34,25,33091},{34,32,1432},{5,34,77303},{4,34,78363},{20,34,36852},{34,31,3318},{34,19,37051},{34,0,95564},{34,2,86756},{34,23,33485},{27,34,12817},{34,9,62842},{34,18,38867},{34,33,10370},{34,24,23985},{34,10,84520},{6,34,68704},{34,7,85315},{28,34,16580},{34,29,12636},{14,34,64189},{3,34,88755},{34,30,9317},{34,21,52650},{34,16,38600},{11,34,61149},{35,29,20510},{22,35,44124},{19,35,44925},{17,35,52844},{35,5,85177},{13,35,54098},{35,2,94630},{21,35,60524},{4,35,86237},{35,10,92394},{9,35,70716},{35,20,44726},{12,35,60811},{14,35,72063},{35,26,28029},{35,8,75425},{35,28,24454},{35,16,46474},{35,3,96629},{35,34,7874},{35,0,103438},{35,15,66010},{35,6,76578},{24,35,31859},{25,35,40965},{35,27,20691},{3,36,106449},{5,36,94997},{11,36,78843},{36,29,30330},{26,36,37849},{36,9,80536},{12,36,70631},{0,36,113258},{34,36,17694},{36,21,70344},{31,36,21012},{36,10,102214},{6,36,86398},{36,4,96057},{36,24,41679},{36,30,27011},{1,36,110025},{36,35,9820},{36,16,56294},{17,36,62664},{8,36,85245},{36,15,75830},{36,28,34274},{13,36,63918},{36,18,56561},{36,14,81883},{37,34,25794},{20,37,62646},{12,37,78731},{7,37,111109},{8,37,93345},{2,37,112550},{4,37,104157},{27,37,38611},{37,22,62044},{28,37,42374},{35,37,17920},{37,5,103097},{23,37,59279},{37,19,62845},{37,10,110314},{37,36,8100},{37,17,70764},{37,6,94498},{37,26,45949},{37,11,86943},{37,31,29112},{33,37,36164},{37,32,27226},{37,25,58885},{29,37,38430},{3,37,114549},{37,18,64661},{37,15,83930},{37,38,2541},{10,38,112855},{39,22,72121},{39,18,74738},{39,19,72922},{7,39,121186},{39,23,69356},{39,26,56026},{39,34,35871},{35,39,27997},{36,39,18177},{1,39,128202},{15,39,94007},{21,39,88521},{38,39,7536},{39,33,46241},{6,39,104575},{31,39,39189},{39,9,98713},{20,39,72723},{27,39,48688},{29,39,48507},{16,39,74471},{11,39,97020},{24,39,59856},{39,8,103422},{39,14,100060},{39,10,120391},{39,5,113174},{39,32,37303},{39,2,122627},{25,39,68962},{39,13,82095},{3,39,124626},{2,40,129296},{36,40,24846},{24,40,66525},{40,18,81407},{40,13,88764},{25,40,75631},{40,29,55176},{40,17,87510},{40,21,95190},{9,40,105382},{40,6,111244},{34,40,42540},{26,40,62695},{19,40,79591},{39,40,6669},{40,33,52910},{40,27,55357},{29,41,49530},{41,39,1023},{7,41,122209},{41,20,73746},{26,41,57049},{25,41,69985},{41,13,83118},{19,41,73945},{32,41,38326},{31,41,40212},{11,41,98043},{41,35,29020},{41,14,101083},{41,2,123650},{41,0,132458},{41,5,114197},{18,41,75761},{41,6,105598},{38,41,8559},{41,21,89544},{41,3,125649},{41,33,47264},{28,41,53474},{41,12,89831},{41,24,60879},{15,41,95030},{36,41,19200},{41,1,129225},{42,14,110641},{16,42,85052},{42,4,124815},{42,13,92676},{42,18,85319},{40,42,3912},{42,30,55769},{42,34,46452},{39,42,10581},{42,2,133208},{15,42,104588},{42,33,56822},{37,42,20658},{20,42,83304},{42,11,107601},{3,42,135207},{25,42,79543},{42,32,47884},{42,29,59088},{36,42,28758},{31,42,49770},{42,1,138783},{42,23,79937},{28,42,63032},{12,42,99389},{42,21,99102},{42,38,18117},{42,22,82702},{0,42,142016},{27,42,59269},{42,17,91422},{42,35,38578},{42,8,114003},{42,7,131767},{42,5,123755},{43,42,9318},{30,43,65087},{41,43,18876},{43,20,92622},{40,43,13230},{14,43,119959},{43,29,68406},{25,43,88861},{34,43,55770},{43,27,68587},{37,43,29976},{31,44,64955},{42,44,15185},{27,44,74454},{17,44,106607},{44,40,19097},{6,44,130341},{44,35,53763},{44,22,97887},{44,21,114287},{44,33,72007},{36,44,43943},{3,44,150392},{44,0,157201},{44,5,138940},{12,44,114574},{44,23,95122},{10,44,146157},{18,44,100504},{44,2,148393},{16,44,100237},{11,44,122786},{43,44,5867},{44,41,24743},{44,26,81792},{30,44,70954},{24,44,85622},{44,37,35843},{9,44,124479},{44,20,98489},{44,1,153968},{44,34,61637},{44,39,25766},{44,19,98688},{7,44,146952},{44,28,78217},{25,44,94728},{44,13,107861},{15,44,119773},{32,44,63069},{29,44,74273},{14,44,125826},{44,8,129188},{44,45,2211},{45,17,108818},{45,38,35513},{45,8,131399},{30,45,73165},{45,34,63848},{45,2,150604},{45,5,141151},{28,45,80428},{45,37,38054},{1,45,156179},{35,45,55974},{45,24,87833},{29,45,76484},{45,14,128037},{45,20,100700},{3,45,152603},{45,31,67166},{45,10,148368},{45,36,46154},{43,45,8078},{11,45,124997},{16,45,102448},{25,45,96939},{45,40,21308},{32,45,65280},{45,15,121984},{7,45,149163},{26,45,84003},{45,13,110072},{0,45,159412},{6,45,132552},{45,33,74218},{46,20,103665},{33,46,77183},{46,16,105413},{38,46,38478},{19,46,103864},{46,17,111783},{46,2,153569},{41,46,29919},{46,9,129655},{46,39,30942},{40,46,24273},{26,46,86968},{46,11,127962},{30,46,76130},{44,46,5176},{10,46,151333},{46,34,66813},{46,6,135517},{46,18,105680},{1,46,159144},{25,46,99904},{46,43,11043},{29,46,79449},{46,8,134364},{42,46,20361}};
		int[][] k = {{1,0,1587},{1,2,2593},{2,0,4180},{3,2,9574},{1,3,12167},{3,0,13754},{4,0,11339},{2,4,7159},{5,2,16487},{5,1,19080},{4,5,9328},{3,5,6913},{0,5,20667},{1,6,25715},{5,6,6635},{7,1,33575},{7,2,30982},{7,4,23823},{7,6,7860},{5,7,14495},{0,7,35162},{5,8,16014},{7,8,1519},{9,2,34658},{6,9,11536},{9,4,27499},{9,1,37251},{9,3,25084},{5,9,18171},{9,8,2157},{10,1,32781},{10,6,7066},{10,3,20614},{2,11,34615},{11,7,3633},{11,1,37208},{12,7,12859},{12,9,9183},{12,10,13653},{12,5,27354},{11,12,9226},{12,2,43841},{6,12,20719},{0,12,48021},{12,4,36682},{1,12,46434}};
		int[][] m = {{0,1,1000000000},{1,2,1000000000},{2,3,1000000000},{3,4,1000000000},{4,5,1000000000},{5,6,1000000000},{6,7,1000000000},{7,8,1000000000},{8,9,1000000000},{9,10,1000000000},{10,11,1000000000},{11,12,1000000000},{12,13,1000000000},{13,14,1000000000},{14,15,1000000000},{15,16,1000000000},{16,17,1000000000},{17,18,1000000000},{18,19,1000000000},{19,20,1000000000},{20,21,1000000000},{21,22,1000000000},{22,23,1000000000},{23,24,1000000000},{24,25,1000000000},{25,26,1000000000},{26,27,1000000000},{27,28,1000000000},{28,29,1000000000},{29,30,1000000000},{30,31,1000000000},{31,32,1000000000},{32,33,1000000000},{33,34,1000000000},{34,35,1000000000},{35,36,1000000000},{36,37,1000000000},{37,38,1000000000},{38,39,1000000000},{39,40,1000000000},{40,41,1000000000},{41,42,1000000000},{42,43,1000000000},{43,44,1000000000},{44,45,1000000000},{45,46,1000000000},{46,47,1000000000},{47,48,1000000000},{48,49,1000000000},{49,50,1000000000},{50,51,1000000000},{51,52,1000000000},{52,53,1000000000},{53,54,1000000000},{54,55,1000000000},{55,56,1000000000},{56,57,1000000000},{57,58,1000000000},{58,59,1000000000},{59,60,1000000000},{60,61,1000000000},{61,62,1000000000},{62,63,1000000000},{63,64,1000000000},{64,65,1000000000},{65,66,1000000000},{66,67,1000000000},{67,68,1000000000},{68,69,1000000000},{69,70,1000000000},{70,71,1000000000},{71,72,1000000000},{72,73,1000000000},{73,74,1000000000},{74,75,1000000000},{75,76,1000000000},{76,77,1000000000},{77,78,1000000000},{78,79,1000000000},{79,80,1000000000},{80,81,1000000000},{81,82,1000000000},{82,83,1000000000},{83,84,1000000000},{84,85,1000000000},{85,86,1000000000},{86,87,1000000000},{87,88,1000000000},{88,89,1000000000},{89,90,1000000000},{90,91,1000000000},{91,92,1000000000},{92,93,1000000000},{93,94,1000000000},{94,95,1000000000},{95,96,1000000000},{96,97,1000000000},{97,98,1000000000},{98,99,1000000000},{99,100,1000000000},{100,101,1000000000},{101,102,1000000000},{102,103,1000000000},{103,104,1000000000},{104,105,1000000000},{105,106,1000000000},{106,107,1000000000},{107,108,1000000000},{108,109,1000000000},{109,110,1000000000},{110,111,1000000000},{111,112,1000000000},{112,113,1000000000},{113,114,1000000000},{114,115,1000000000},{115,116,1000000000},{116,117,1000000000},{117,118,1000000000},{118,119,1000000000},{119,120,1000000000},{120,121,1000000000},{121,122,1000000000},{122,123,1000000000},{123,124,1000000000},{124,125,1000000000},{125,126,1000000000},{126,127,1000000000},{127,128,1000000000},{128,129,1000000000},{129,130,1000000000},{130,131,1000000000},{131,132,1000000000},{132,133,1000000000},{133,134,1000000000},{134,135,1000000000},{135,136,1000000000},{136,137,1000000000},{137,138,1000000000},{138,139,1000000000},{139,140,1000000000},{140,141,1000000000},{141,142,1000000000},{142,143,1000000000},{143,144,1000000000},{144,145,1000000000},{145,146,1000000000},{146,147,1000000000},{147,148,1000000000},{148,149,1000000000},{149,150,1000000000},{150,151,1000000000},{151,152,1000000000},{152,153,1000000000},{153,154,1000000000},{154,155,1000000000},{155,156,1000000000},{156,157,1000000000},{157,158,1000000000},{158,159,1000000000},{159,160,1000000000},{160,161,1000000000},{161,162,1000000000},{162,163,1000000000},{163,164,1000000000},{164,165,1000000000},{165,166,1000000000},{166,167,1000000000},{167,168,1000000000},{168,169,1000000000},{169,170,1000000000},{170,171,1000000000},{171,172,1000000000},{172,173,1000000000},{173,174,1000000000},{174,175,1000000000},{175,176,1000000000},{176,177,1000000000},{177,178,1000000000},{178,179,1000000000},{179,180,1000000000},{180,181,1000000000},{181,182,1000000000},{182,183,1000000000},{183,184,1000000000},{184,185,1000000000},{185,186,1000000000},{186,187,1000000000},{187,188,1000000000},{188,189,1000000000},{189,190,1000000000},{190,191,1000000000},{191,192,1000000000},{192,193,1000000000},{193,194,1000000000},{194,195,1000000000},{195,196,1000000000},{196,197,1000000000},{197,198,1000000000},{198,199,1000000000}};
		int[][] n = {{0,1,1000000000},{1,2,1000000000},{2,3,1000000000}};
		countPaths(200,m);
	}
//	static int min = 1000;  //用于记录最短距离
	static Long inf = Long.MAX_VALUE;
	static int mod = (int) (1e9+7);
	public static int countPaths(int n, int[][] roads) {
		Long[][] edge = new Long[n][n];//记录路线数组 x,y 值为距离
		int[] vis = new int[n]; //标记数组 用于记录哪个顶点被访问了
		long[] dist = new long[n];//记录距离
		int[] ways = new int[n];//方式数量
        if(n==1)ways[0]=1;
		for(int i=0;i<n;i++) { //初始化数组
			for(int j=0;j<n;j++) {
				edge[i][j]=inf;
				edge[j][i]=inf;
			}
		}
		for(int[] i:roads) {//初始化数组
			edge[i[0]][i[1]] = (long) i[2];
			edge[i[1]][i[0]] = (long) i[2];
		}
		for(int i=1;i<n;i++) {//记录0到i点的最短路径
			dist[i]=edge[0][i];
			if(dist[i]<inf)
				ways[i]++;
		}
//		for(int j=0;j<n;j++) {
//			System.out.println("顶点"+j+" 距离"+dist[j]+" ");
//			System.out.println("顶点"+j+" tiao"+ways[j]+" ");
//			vis[j]=0;
//		}
		for(int i=1;i<n;i++) {
			long min = inf;
			int now = 0;
//			for(int j=0;j<n;j++) {
//				System.out.println("顶点"+j+" 距离"+dist[j]+" "+"顶点"+j+" tiao"+ways[j]+"vis "+vis[j]);
//				System.out.println("顶点"+j+" tiao"+ways[j]+" ");
////				vis[j]=0;
//				}
			for(int j=1;j<n;j++) {
				if(vis[j]==0 && dist[j]<min) {
					min = dist[j];
//					System.out.println(dist[j]+" now "+now);
					now = j;
				}
			}
			if(now==0)break;
			vis[now]=1;
			for(int j=1;j<n;j++) {
				if(edge[now][j]<inf && dist[now]+edge[now][j]<dist[j]) {
					dist[j] = dist[now]+edge[now][j];
					ways[j] = ways[now];
					ways[j]%=mod;
//					System.out.println("now:"+now+" j "+j);
//					System.out.println("ways j:"+ways[j]+" ways[now] "+ways[now]);
				}else if(edge[now][j]<inf && dist[now]+edge[now][j]==dist[j]) {
					ways[j] += ways[now];
					ways[j]%=mod;
//					System.out.println("now:"+now+" j "+j);
//					System.out.println("ways j:"+ways[j]+" ways[now] "+ways[now]);
				}
			}
		}
		for(int i=0;i<n;i++) {
//			System.out.println("顶点"+i+" 条数"+ways[i]+" ");
			vis[i]=0;
		}
//		Found(0,n,dist[n-1],dist[0],vis,edge);
//		 System.out.println(ways[n-1]);
		return ways[n-1];
	}
	static int len=0;
	//now目前在的点  n所有点个数 min 是到n的最短长度   d是目前距离  vis是已访问节点 edge是边
	public static long Found(int now,int n,long min,long d,int[] vis,int[][] edge) {
		System.out.println("--"+now+" "+n+" "+min+" "+d+" ");
		if(d>min)return 0;
		if(now==n-1&&min==d) {
//			System.out.println("-");
			len++;
			len =len % mod;
			return 0;
		}
		for(int i=0;i<n;i++) {
//			for(int j=0;j<n;j++) {
////				System.out.println("顶点"+i+" 距离"+dist[i]+" ");
//				vis[j]=0;
//			}
//			System.out.println(vis[i]+"vis[i]"+i);
			if(vis[i]==0 && edge[now][i]<inf) {
//				System.out.println(i);
				d+=edge[now][i];//记录长度
				vis[i]=1;//标记一访问
				vis[now]=1;
				Found(i,n,min,d,vis,edge);
				vis[i]=0;
				d-=edge[now][i];
			}
		}
		
		return 0;
	}
}
